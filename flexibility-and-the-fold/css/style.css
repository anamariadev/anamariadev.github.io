/*
A: How we did things before responsive design
B: How things work with Responsive Web Design (RWD). Changes in the horizontal direction. Gets smaller or bigger based on the amount of space that's available. Does nothing in the vertical direction. On mobile, words could get cut off. We don't worry about how things look. We just assume people are going to scroll.
C: Layout responds to both the horizontal and vertical direction. Gets smaller, but everything is going to fit into the space that's available.
*/

.o-body {
    font-family: verdana, helvetica, arial, sans-serif;
    font-size: 100%;
    background-color: #fff;
    color: #61162d;
    margin: 0;
    text-align: center;
}

.o-body_b {
    margin: 0 1.5rem;
}

.o-header {
    margin: 6rem auto;
}

.o-header_a {
    width: 920px;
}

.c-main-nav__link {
    display: block;
    color: #61162d;
    text-decoration: none;
}

.c-main-nav__link:hover {
    color: #b5a36a;
    text-decoration: underline;
    -webkit-text-decoration-style: dashed;
    text-decoration-style: dashed;
    -webkit-transition: all .5s;
    transition: all .5s;
}

.c-title {
    text-transform: uppercase;
    font-weight: normal;
    font-size: 2.4rem;
    letter-spacing: 3px;
    color: #61162d;
    line-height: 1em;
}

.c-main-nav__list {
    list-style-type: none;
    font-family: verdana, helvetica, arial, sans-serif;
    font-size: 0.72em;
    font-weight: normal;
    text-transform: uppercase;
    letter-spacing: 1.5px;
    padding: 0;
    margin: 0.3rem 0;
    display: inline-block;
    text-align: center;
}

.c-main-nav__item {
    float: left;
    border-right: 1px solid #000;
    padding: 0 1.25rem;
    line-height: 0.75rem;
    height: 0.75rem;
    margin: 0.2rem 0;
}

.c-main-nav__item:last-child {
    border-right: none;
}

@supports (display: grid) {
    /* grid-template-rows: first row and last row defined by fr units. once middle 3 rows have the space they need, have browser take leftover space and distribute it using fr units. 3/4 and 1/4 of left over space. 
    max-content: be as large as you can possibly be, but no larger in order to fit the content that you have. in this case, the height of the text plus the margins on the headline.
    auto: going to be the amount of space that it needs in order to hold the content that it has. automatically going to calculate itself. no bigger nor smaller than the content itself.
    minmax: be a minimum of 100px and a max of 350. 
    */
    .o-header_c {
        margin: 0 1rem;
        display: grid;
        grid-template-rows: 3fr minmax(100px, 350px) max-content auto 1fr;
        justify-items: center;
        height: 100vh;
    }

    @media (max-height: 980px) {
        .o-body_c {
            height: 100vh;
        }
    }

    .c-image_c {
        /* autoprefixer: off */
        grid-row: 2;
        height: 100%;
    }

    .c-title_c {
        /* autoprefixer: off */
        grid-row: 3;
    }

    .c-main-nav_c {
        /* autoprefixer: off */
        grid-row: 4;
    }

    .c-main-nav__list_c {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        margin-bottom: 3em;
    }

    .c-main-nav__item_c {
        float: none;
    }
}
